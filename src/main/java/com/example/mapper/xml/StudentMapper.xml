<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--命名空间 - 绑定一个对应的Mapper接口-->
<mapper namespace="com.example.mapper.StudentMapper">
    <resultMap id="BaseResultMap" type="com.example.model.entity.Student">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="birthday" property="birthday" jdbcType="DATE"/>
        <result column="create_time" property="createTime" jdbcType="DATE"/>
        <result column="update_time" property="updateTime" jdbcType="DATE"/>
        <result column="is_delete" property="isDelete" jdbcType="INTEGER"/>
<!--        <association property="scores" column="id"-->
<!--                     select="com.example.mapper.ScoreMapper.getScoreByStudentId"/>-->
    </resultMap>

    <sql id="studentParam">
        id,name,age,birthday,create_time,update_time,is_delete
    </sql>

    <insert id="addStudent" parameterType="com.example.model.entity.Student" useGeneratedKeys="true" keyProperty="student.id">
        <!--        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="student.id">-->
        <!--            SELECT LAST_INSERT_ID()-->
        <!--        </selectKey>-->
        insert into student(name,age) values(#{student.name},#{student.age})
    </insert>

    <select id="getStudent" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select <include refid="studentParam"/>
        from student
        where id = #{id}
    </select>

    <select id="getStudentList" parameterType="com.example.model.entity.Student" resultType="com.example.model.entity.Student">
        select <include refid="studentParam"/>
        from student
        <where>
            <if test="student.id != null">and id = #{student.id}</if>
            <if test="student.name != null">and name = #{student.name}</if>
            <if test="student.age != null">and age = #{student.age}</if>
        </where>
    </select>

    <!--    批量添加-->
    <insert id="bathInsert" parameterType="java.util.List">
        insert into student(name,age)
        values
        <foreach collection="studentList" item="student" separator=",">
            (#{student.name},#{student.age})
        </foreach>
    </insert>

    <!--    批量更新-->
    <update id="bathUpdate">
        update student
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="name =case" suffix="end,">
                <foreach collection="updateStudentList" item="student" index="index">
                    <if test="student.name!=null">
                        when id=#{student.id} then #{student.name}
                    </if>
                </foreach>
            </trim>

            <trim prefix=" age =case" suffix="end,">
                <foreach collection="updateStudentList" item="student" index="index">
                    <if test="student.age!=null">
                        when id=#{student.id} then #{student.age}
                    </if>
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="updateStudentList" separator="or" item="student" index="index" >
            id=#{student.id}
        </foreach>
    </update>



    <select id="queryByIds" resultType="com.example.model.entity.Student">
        select *
        from student
        where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
</mapper>
